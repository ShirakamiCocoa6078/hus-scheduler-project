// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL") // .env 파일의 URL을 참조
}

// --- NextAuth.js 필수 모델 ---

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// --- HUS-scheduler 커스텀 모델 ---

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]

  // 커스텀 필드
  department      String?   // 학과
  homeStation     String?   // 출발역
  universityStation String? // 도착역
  isSetupComplete Boolean   @default(false) // 초기 설정 완료 여부

  // 관계 설정
  courses         Course[]
  tasks           Task[]
}

model Course {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String   // 과목명
  classroom   String?  // 강의실
  dayOfWeek   Int      // 요일 (0: Sunday, 1: Monday, ...)
  startTime   String   // 시작 시간 (HH:MM)
  endTime     String   // 종료 시간 (HH:MM)
}

model Task {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String    // 할 일 제목
  dueDate     DateTime? // 마감일
  isCompleted Boolean   @default(false)
  source      String    @default("manual") // 출처 ('manual' or 'moodle')
}